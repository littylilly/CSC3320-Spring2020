MKDIR(1)                         User Commands                        MKDIR(1)



NAME
       mkdir - make directories

SYNOPSIS
       mkdir [OPTION]... DIRECTORY...

DESCRIPTION
       Create the DIRECTORY(ies), if they do not already exist.

       Mandatory  arguments  to  long  options are mandatory for short options
       too.

       -m, --mode=MODE
              set file mode (as in chmod), not a=rwx - umask

       -p, --parents
              no error if existing, make parent directories as needed

       -v, --verbose
              print a message for each created directory

       -Z     set SELinux security context of each created  directory  to  the
              default type

       --context[=CTX]
              like  -Z,  or  if CTX is specified then set the SELinux or SMACK
              security context to CTX

       --help display this help and exit

       --version
              output version information and exit

       GNU  coreutils  online  help:  <http://www.gnu.org/software/coreutils/>
       Report mkdir translation bugs to <http://translationproject.org/team/>

AUTHOR
       Written by David MacKenzie.

COPYRIGHT
       Copyright  ©  2013  Free Software Foundation, Inc.  License GPLv3+: GNU
       GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
       This is free software: you are free  to  change  and  redistribute  it.
       There is NO WARRANTY, to the extent permitted by law.

SEE ALSO
       mkdir(2)

       The full documentation for mkdir is maintained as a Texinfo manual.  If
       the info and mkdir programs are properly installed at  your  site,  the
       command

              info coreutils 'mkdir invocation'

       should give you access to the complete manual.



GNU coreutils 8.22               November 2020                        MKDIR(1)
PWD(1)                           User Commands                          PWD(1)



NAME
       pwd - print name of current/working directory

SYNOPSIS
       pwd [OPTION]...

DESCRIPTION
       Print the full filename of the current working directory.

       -L, --logical
              use PWD from environment, even if it contains symlinks

       -P, --physical
              avoid all symlinks

       --help display this help and exit

       --version
              output version information and exit

       NOTE:  your shell may have its own version of pwd, which usually super‐
       sedes the version described here.  Please refer to your  shell's  docu‐
       mentation for details about the options it supports.

       GNU  coreutils  online  help:  <http://www.gnu.org/software/coreutils/>
       Report pwd translation bugs to <http://translationproject.org/team/>

AUTHOR
       Written by Jim Meyering.

COPYRIGHT
       Copyright © 2013 Free Software Foundation, Inc.   License  GPLv3+:  GNU
       GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
       This  is  free  software:  you  are free to change and redistribute it.
       There is NO WARRANTY, to the extent permitted by law.

SEE ALSO
       getcwd(3)

       The full documentation for pwd is maintained as a Texinfo  manual.   If
       the info and pwd programs are properly installed at your site, the com‐
       mand

              info coreutils 'pwd invocation'

       should give you access to the complete manual.



GNU coreutils 8.22               November 2020                          PWD(1)
LS(1)                            User Commands                           LS(1)



NAME
       ls - list directory contents

SYNOPSIS
       ls [OPTION]... [FILE]...

DESCRIPTION
       List  information  about  the FILEs (the current directory by default).
       Sort entries alphabetically if none of -cftuvSUX nor --sort  is  speci‐
       fied.

       Mandatory  arguments  to  long  options are mandatory for short options
       too.

       -a, --all
              do not ignore entries starting with .

       -A, --almost-all
              do not list implied . and ..

       --author
              with -l, print the author of each file

       -b, --escape
              print C-style escapes for nongraphic characters

       --block-size=SIZE
              scale sizes by SIZE before printing them; e.g., '--block-size=M'
              prints sizes in units of 1,048,576 bytes; see SIZE format below

       -B, --ignore-backups
              do not list implied entries ending with ~

       -c     with -lt: sort by, and show, ctime (time of last modification of
              file status information); with -l: show ctime and sort by  name;
              otherwise: sort by ctime, newest first

       -C     list entries by columns

       --color[=WHEN]
              colorize  the  output;  WHEN can be 'never', 'auto', or 'always'
              (the default); more info below

       -d, --directory
              list directories themselves, not their contents

       -D, --dired
              generate output designed for Emacs' dired mode

       -f     do not sort, enable -aU, disable -ls --color

       -F, --classify
              append indicator (one of */=>@|) to entries

       --file-type
              likewise, except do not append '*'

       --format=WORD
              across -x, commas -m, horizontal -x, long -l, single-column  -1,
              verbose -l, vertical -C

       --full-time
              like -l --time-style=full-iso

       -g     like -l, but do not list owner

       --group-directories-first
              group directories before files;

              can   be  augmented  with  a  --sort  option,  but  any  use  of
              --sort=none (-U) disables grouping

       -G, --no-group
              in a long listing, don't print group names

       -h, --human-readable
              with -l, print sizes in human readable format (e.g., 1K 234M 2G)

       --si   likewise, but use powers of 1000 not 1024

       -H, --dereference-command-line
              follow symbolic links listed on the command line

       --dereference-command-line-symlink-to-dir
              follow each command line symbolic link

              that points to a directory

       --hide=PATTERN
              do not list implied entries matching shell  PATTERN  (overridden
              by -a or -A)

       --indicator-style=WORD
              append indicator with style WORD to entry names: none (default),
              slash (-p), file-type (--file-type), classify (-F)

       -i, --inode
              print the index number of each file

       -I, --ignore=PATTERN
              do not list implied entries matching shell PATTERN

       -k, --kibibytes
              default to 1024-byte blocks for disk usage

       -l     use a long listing format

       -L, --dereference
              when showing file information for a symbolic link, show informa‐
              tion  for  the file the link references rather than for the link
              itself

       -m     fill width with a comma separated list of entries

       -n, --numeric-uid-gid
              like -l, but list numeric user and group IDs

       -N, --literal
              print raw entry names (don't treat e.g. control characters  spe‐
              cially)

       -o     like -l, but do not list group information

       -p, --indicator-style=slash
              append / indicator to directories

       -q, --hide-control-chars
              print ? instead of nongraphic characters

       --show-control-chars
              show nongraphic characters as-is (the default, unless program is
              'ls' and output is a terminal)

       -Q, --quote-name
              enclose entry names in double quotes

       --quoting-style=WORD
              use quoting style WORD for entry names: literal, locale,  shell,
              shell-always, c, escape

       -r, --reverse
              reverse order while sorting

       -R, --recursive
              list subdirectories recursively

       -s, --size
              print the allocated size of each file, in blocks

       -S     sort by file size

       --sort=WORD
              sort  by  WORD instead of name: none (-U), size (-S), time (-t),
              version (-v), extension (-X)

       --time=WORD
              with -l, show time as WORD instead of default modification time:
              atime or access or use (-u) ctime or status (-c); also use spec‐
              ified time as sort key if --sort=time

       --time-style=STYLE
              with -l, show times using style STYLE: full-iso, long-iso,  iso,
              locale,  or  +FORMAT;  FORMAT  is interpreted like in 'date'; if
              FORMAT  is  FORMAT1<newline>FORMAT2,  then  FORMAT1  applies  to
              non-recent  files  and FORMAT2 to recent files; if STYLE is pre‐
              fixed with 'posix-', STYLE takes effect only outside  the  POSIX
              locale

       -t     sort by modification time, newest first

       -T, --tabsize=COLS
              assume tab stops at each COLS instead of 8

       -u     with  -lt:  sort by, and show, access time; with -l: show access
              time and sort by name; otherwise: sort by access time

       -U     do not sort; list entries in directory order

       -v     natural sort of (version) numbers within text

       -w, --width=COLS
              assume screen width instead of current value

       -x     list entries by lines instead of by columns

       -X     sort alphabetically by entry extension

       -1     list one file per line

       SELinux options:

       --lcontext
              Display security context.   Enable -l. Lines  will  probably  be
              too wide for most displays.

       -Z, --context
              Display  security context so it fits on most displays.  Displays
              only mode, user, group, security context and file name.

       --scontext
              Display only security context and file name.

       --help display this help and exit

       --version
              output version information and exit

       SIZE is an integer and optional unit (example:  10M  is  10*1024*1024).
       Units  are K, M, G, T, P, E, Z, Y (powers of 1024) or KB, MB, ... (pow‐
       ers of 1000).

       Using color to distinguish file types is disabled both by  default  and
       with  --color=never.  With --color=auto, ls emits color codes only when
       standard output is connected to a terminal.  The LS_COLORS  environment
       variable can change the settings.  Use the dircolors command to set it.

   Exit status:
       0      if OK,

       1      if minor problems (e.g., cannot access subdirectory),

       2      if serious trouble (e.g., cannot access command-line argument).

       GNU  coreutils  online  help:  <http://www.gnu.org/software/coreutils/>
       Report ls translation bugs to <http://translationproject.org/team/>

AUTHOR
       Written by Richard M. Stallman and David MacKenzie.

COPYRIGHT
       Copyright © 2013 Free Software Foundation, Inc.   License  GPLv3+:  GNU
       GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
       This  is  free  software:  you  are free to change and redistribute it.
       There is NO WARRANTY, to the extent permitted by law.

SEE ALSO
       The full documentation for ls is maintained as a  Texinfo  manual.   If
       the  info and ls programs are properly installed at your site, the com‐
       mand

              info coreutils 'ls invocation'

       should give you access to the complete manual.



GNU coreutils 8.22               November 2020                           LS(1)
RM(1)                            User Commands                           RM(1)



NAME
       rm - remove files or directories

SYNOPSIS
       rm [OPTION]... FILE...

DESCRIPTION
       This  manual  page  documents  the  GNU version of rm.  rm removes each
       specified file.  By default, it does not remove directories.

       If the -I or --interactive=once option is given,  and  there  are  more
       than  three  files  or  the  -r,  -R, or --recursive are given, then rm
       prompts the user for whether to proceed with the entire operation.   If
       the response is not affirmative, the entire command is aborted.

       Otherwise,  if  a file is unwritable, standard input is a terminal, and
       the -f or --force  option  is  not  given,  or  the  -i  or  --interac‐
       tive=always  option is given, rm prompts the user for whether to remove
       the file.  If the response is not affirmative, the file is skipped.

OPTIONS
       Remove (unlink) the FILE(s).

       -f, --force
              ignore nonexistent files and arguments, never prompt

       -i     prompt before every removal

       -I     prompt once before removing  more  than  three  files,  or  when
              removing recursively; less intrusive than -i, while still giving
              protection against most mistakes

       --interactive[=WHEN]
              prompt according to WHEN: never,  once  (-I),  or  always  (-i);
              without WHEN, prompt always

       --one-file-system
              when  removing  a hierarchy recursively, skip any directory that
              is on a file system different from  that  of  the  corresponding
              command line argument

       --no-preserve-root
              do not treat '/' specially

       --preserve-root
              do not remove '/' (default)

       -r, -R, --recursive
              remove directories and their contents recursively

       -d, --dir
              remove empty directories

       -v, --verbose
              explain what is being done

       --help display this help and exit

       --version
              output version information and exit

       By default, rm does not remove directories.  Use the --recursive (-r or
       -R) option to remove each listed directory, too, along with all of  its
       contents.

       To  remove a file whose name starts with a '-', for example '-foo', use
       one of these commands:

              rm -- -foo

              rm ./-foo

       Note that if you use rm to remove a  file,  it  might  be  possible  to
       recover  some  of its contents, given sufficient expertise and/or time.
       For greater assurance that the contents are truly  unrecoverable,  con‐
       sider using shred.

       GNU  coreutils  online  help:  <http://www.gnu.org/software/coreutils/>
       Report rm translation bugs to <http://translationproject.org/team/>

AUTHOR
       Written by Paul Rubin, David MacKenzie, Richard M.  Stallman,  and  Jim
       Meyering.

COPYRIGHT
       Copyright  ©  2013  Free Software Foundation, Inc.  License GPLv3+: GNU
       GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
       This is free software: you are free  to  change  and  redistribute  it.
       There is NO WARRANTY, to the extent permitted by law.

SEE ALSO
       unlink(1), unlink(2), chattr(1), shred(1)

       The  full  documentation  for rm is maintained as a Texinfo manual.  If
       the info and rm programs are properly installed at your site, the  com‐
       mand

              info coreutils 'rm invocation'

       should give you access to the complete manual.



GNU coreutils 8.22               November 2020                           RM(1)
CHMOD(1)                         User Commands                        CHMOD(1)



NAME
       chmod - change file mode bits

SYNOPSIS
       chmod [OPTION]... MODE[,MODE]... FILE...
       chmod [OPTION]... OCTAL-MODE FILE...
       chmod [OPTION]... --reference=RFILE FILE...

DESCRIPTION
       This manual page documents the GNU version of chmod.  chmod changes the
       file mode bits of each given file  according  to  mode,  which  can  be
       either a symbolic representation of changes to make, or an octal number
       representing the bit pattern for the new mode bits.

       The format of a symbolic mode is  [ugoa...][[+-=][perms...]...],  where
       perms  is  either zero or more letters from the set rwxXst, or a single
       letter from the set ugo.  Multiple symbolic modes can be  given,  sepa‐
       rated by commas.

       A  combination  of the letters ugoa controls which users' access to the
       file will be changed: the user who owns it  (u),  other  users  in  the
       file's group (g), other users not in the file's group (o), or all users
       (a).  If none of these are given, the effect is as if a were given, but
       bits that are set in the umask are not affected.

       The  operator  +  causes the selected file mode bits to be added to the
       existing file mode bits of each file; - causes them to be removed;  and
       =  causes  them  to  be added and causes unmentioned bits to be removed
       except that a directory's unmentioned set user and group  ID  bits  are
       not affected.

       The  letters  rwxXst select file mode bits for the affected users: read
       (r), write (w), execute (or search for directories) (x), execute/search
       only  if  the file is a directory or already has execute permission for
       some user (X), set user or group ID on execution (s), restricted  dele‐
       tion  flag or sticky bit (t).  Instead of one or more of these letters,
       you can specify exactly one of the letters ugo: the permissions granted
       to  the  user  who  owns the file (u), the permissions granted to other
       users who are members of the file's  group  (g),  and  the  permissions
       granted  to  users  that are in neither of the two preceding categories
       (o).

       A numeric mode is from one to  four  octal  digits  (0-7),  derived  by
       adding up the bits with values 4, 2, and 1.  Omitted digits are assumed
       to be leading zeros.  The first digit selects the set user ID  (4)  and
       set group ID (2) and restricted deletion or sticky (1) attributes.  The
       second digit selects permissions for the user who owns the  file:  read
       (4),  write  (2),  and  execute  (1); the third selects permissions for
       other users in the file's group, with the same values; and  the  fourth
       for other users not in the file's group, with the same values.

       chmod never changes the permissions of symbolic links; the chmod system
       call cannot change their permissions.  This is not a problem since  the
       permissions  of  symbolic links are never used.  However, for each sym‐
       bolic link listed on the command line, chmod changes the permissions of
       the pointed-to file.  In contrast, chmod ignores symbolic links encoun‐
       tered during recursive directory traversals.

SETUID AND SETGID BITS
       chmod clears the set-group-ID bit of a regular file if the file's group
       ID  does  not  match the user's effective group ID or one of the user's
       supplementary group IDs, unless the user  has  appropriate  privileges.
       Additional restrictions may cause the set-user-ID and set-group-ID bits
       of MODE or RFILE to be ignored.  This behavior depends  on  the  policy
       and  functionality of the underlying chmod system call.  When in doubt,
       check the underlying system behavior.

       chmod preserves a directory's set-user-ID and set-group-ID bits  unless
       you  explicitly  specify otherwise.  You can set or clear the bits with
       symbolic modes like u+s and g-s, and you can set (but  not  clear)  the
       bits with a numeric mode.

RESTRICTED DELETION FLAG OR STICKY BIT
       The  restricted  deletion  flag  or  sticky  bit is a single bit, whose
       interpretation depends on the file type.  For directories, it  prevents
       unprivileged  users  from  removing or renaming a file in the directory
       unless they  own  the  file  or  the  directory;  this  is  called  the
       restricted  deletion  flag  for the directory, and is commonly found on
       world-writable directories like /tmp.  For regular files on some  older
       systems,  the  bit saves the program's text image on the swap device so
       it will load more quickly when run; this is called the sticky bit.

OPTIONS
       Change the mode of each FILE to MODE.   With  --reference,  change  the
       mode of each FILE to that of RFILE.

       -c, --changes
              like verbose but report only when a change is made

       -f, --silent, --quiet
              suppress most error messages

       -v, --verbose
              output a diagnostic for every file processed

       --no-preserve-root
              do not treat '/' specially (the default)

       --preserve-root
              fail to operate recursively on '/'

       --reference=RFILE
              use RFILE's mode instead of MODE values

       -R, --recursive
              change files and directories recursively

       --help display this help and exit

       --version
              output version information and exit

       Each           MODE           is          of          the          form
       '[ugoa]*([-+=]([rwxXst]*|[ugo]))+|[-+=][0-7]+'.

       GNU  coreutils  online  help:  <http://www.gnu.org/software/coreutils/>
       Report chmod translation bugs to <http://translationproject.org/team/>

AUTHOR
       Written by David MacKenzie and Jim Meyering.

COPYRIGHT
       Copyright  ©  2013  Free Software Foundation, Inc.  License GPLv3+: GNU
       GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
       This is free software: you are free  to  change  and  redistribute  it.
       There is NO WARRANTY, to the extent permitted by law.

SEE ALSO
       chmod(2)

       The full documentation for chmod is maintained as a Texinfo manual.  If
       the info and chmod programs are properly installed at  your  site,  the
       command

              info coreutils 'chmod invocation'

       should give you access to the complete manual.



GNU coreutils 8.22               November 2020                        CHMOD(1)
SORT(1)                          User Commands                         SORT(1)



NAME
       sort - sort lines of text files

SYNOPSIS
       sort [OPTION]... [FILE]...
       sort [OPTION]... --files0-from=F

DESCRIPTION
       Write sorted concatenation of all FILE(s) to standard output.

       Mandatory  arguments  to  long  options are mandatory for short options
       too.  Ordering options:

       -b, --ignore-leading-blanks
              ignore leading blanks

       -d, --dictionary-order
              consider only blanks and alphanumeric characters

       -f, --ignore-case
              fold lower case to upper case characters

       -g, --general-numeric-sort
              compare according to general numerical value

       -i, --ignore-nonprinting
              consider only printable characters

       -M, --month-sort
              compare (unknown) < 'JAN' < ... < 'DEC'

       -h, --human-numeric-sort
              compare human readable numbers (e.g., 2K 1G)

       -n, --numeric-sort
              compare according to string numerical value

       -R, --random-sort
              sort by random hash of keys

       --random-source=FILE
              get random bytes from FILE

       -r, --reverse
              reverse the result of comparisons

       --sort=WORD
              sort according to WORD: general-numeric  -g,  human-numeric  -h,
              month -M, numeric -n, random -R, version -V

       -V, --version-sort
              natural sort of (version) numbers within text

       Other options:

       --batch-size=NMERGE
              merge at most NMERGE inputs at once; for more use temp files

       -c, --check, --check=diagnose-first
              check for sorted input; do not sort

       -C, --check=quiet, --check=silent
              like -c, but do not report first bad line

       --compress-program=PROG
              compress temporaries with PROG; decompress them with PROG -d

       --debug
              annotate the part of the line used to sort, and warn about ques‐
              tionable usage to stderr

       --files0-from=F
              read input from the files specified by NUL-terminated  names  in
              file F; If F is - then read names from standard input

       -k, --key=KEYDEF
              sort via a key; KEYDEF gives location and type

       -m, --merge
              merge already sorted files; do not sort

       -o, --output=FILE
              write result to FILE instead of standard output

       -s, --stable
              stabilize sort by disabling last-resort comparison

       -S, --buffer-size=SIZE
              use SIZE for main memory buffer

       -t, --field-separator=SEP
              use SEP instead of non-blank to blank transition

       -T, --temporary-directory=DIR
              use  DIR  for temporaries, not $TMPDIR or /tmp; multiple options
              specify multiple directories

       --parallel=N
              change the number of sorts run concurrently to N

       -u, --unique
              with -c, check for strict ordering; without -c, output only  the
              first of an equal run

       -z, --zero-terminated
              end lines with 0 byte, not newline

       --help display this help and exit

       --version
              output version information and exit

       KEYDEF  is F[.C][OPTS][,F[.C][OPTS]] for start and stop position, where
       F is a field number and C a character position in the field;  both  are
       origin 1, and the stop position defaults to the line's end.  If neither
       -t nor -b is in effect, characters in a  field  are  counted  from  the
       beginning of the preceding whitespace.  OPTS is one or more single-let‐
       ter ordering options  [bdfgiMhnRrV],  which  override  global  ordering
       options  for  that key.  If no key is given, use the entire line as the
       key.

       SIZE may be followed by the following multiplicative suffixes: % 1%  of
       memory, b 1, K 1024 (default), and so on for M, G, T, P, E, Z, Y.

       With no FILE, or when FILE is -, read standard input.

       ***  WARNING  ***  The locale specified by the environment affects sort
       order.  Set LC_ALL=C to get the traditional sort order that uses native
       byte values.

       GNU  coreutils  online  help:  <http://www.gnu.org/software/coreutils/>
       Report sort translation bugs to <http://translationproject.org/team/>

AUTHOR
       Written by Mike Haertel and Paul Eggert.

COPYRIGHT
       Copyright © 2013 Free Software Foundation, Inc.   License  GPLv3+:  GNU
       GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
       This  is  free  software:  you  are free to change and redistribute it.
       There is NO WARRANTY, to the extent permitted by law.

SEE ALSO
       uniq(1)

       The full documentation for sort is maintained as a Texinfo manual.   If
       the  info  and  sort  programs are properly installed at your site, the
       command

              info coreutils 'sort invocation'

       should give you access to the complete manual.



GNU coreutils 8.22               November 2020                         SORT(1)
GREP(1)                     General Commands Manual                    GREP(1)



NAME
       grep, egrep, fgrep - print lines matching a pattern

SYNOPSIS
       grep [OPTIONS] PATTERN [FILE...]
       grep [OPTIONS] [-e PATTERN | -f FILE] [FILE...]

DESCRIPTION
       grep  searches the named input FILEs (or standard input if no files are
       named, or if a single hyphen-minus (-) is given as file name) for lines
       containing  a  match to the given PATTERN.  By default, grep prints the
       matching lines.

       In addition, two variant programs egrep and fgrep are available.  egrep
       is  the  same  as  grep -E.   fgrep  is  the  same  as grep -F.  Direct
       invocation as either egrep or fgrep is deprecated, but is  provided  to
       allow historical applications that rely on them to run unmodified.

OPTIONS
   Generic Program Information
       --help Print  a  usage  message  briefly summarizing these command-line
              options and the bug-reporting address, then exit.

       -V, --version
              Print the version number of grep to the standard output  stream.
              This  version  number should be included in all bug reports (see
              below).

   Matcher Selection
       -E, --extended-regexp
              Interpret PATTERN as an extended regular  expression  (ERE,  see
              below).  (-E is specified by POSIX.)

       -F, --fixed-strings, --fixed-regexp
              Interpret  PATTERN  as  a  list  of  fixed strings, separated by
              newlines, any of which is to be matched.  (-F  is  specified  by
              POSIX,  --fixed-regexp  is an obsoleted alias, please do not use
              it in new scripts.)

       -G, --basic-regexp
              Interpret PATTERN  as  a  basic  regular  expression  (BRE,  see
              below).  This is the default.

       -P, --perl-regexp
              Interpret  PATTERN as a Perl regular expression.  This is highly
              experimental and grep -P may warn of unimplemented features.

   Matching Control
       -e PATTERN, --regexp=PATTERN
              Use PATTERN as  the  pattern.   This  can  be  used  to  specify
              multiple search patterns, or to protect a pattern beginning with
              a hyphen (-).  (-e is specified by POSIX.)

       -f FILE, --file=FILE
              Obtain patterns  from  FILE,  one  per  line.   The  empty  file
              contains  zero  patterns, and therefore matches nothing.  (-f is
              specified by POSIX.)

       -i, --ignore-case
              Ignore case distinctions in  both  the  PATTERN  and  the  input
              files.  (-i is specified by POSIX.)

       -v, --invert-match
              Invert the sense of matching, to select non-matching lines.  (-v
              is specified by POSIX.)

       -w, --word-regexp
              Select only those  lines  containing  matches  that  form  whole
              words.   The  test is that the matching substring must either be
              at the  beginning  of  the  line,  or  preceded  by  a  non-word
              constituent  character.  Similarly, it must be either at the end
              of the line or followed by  a  non-word  constituent  character.
              Word-constituent   characters   are  letters,  digits,  and  the
              underscore.

       -x, --line-regexp
              Select only those matches that exactly  match  the  whole  line.
              (-x is specified by POSIX.)

       -y     Obsolete synonym for -i.

   General Output Control
       -c, --count
              Suppress  normal output; instead print a count of matching lines
              for each input file.  With the -v,  --invert-match  option  (see
              below), count non-matching lines.  (-c is specified by POSIX.)

       --color[=WHEN], --colour[=WHEN]
              Surround   the  matched  (non-empty)  strings,  matching  lines,
              context lines, file  names,  line  numbers,  byte  offsets,  and
              separators  (for fields and groups of context lines) with escape
              sequences to display them in color on the terminal.  The  colors
              are  defined  by  the  environment  variable  GREP_COLORS.   The
              deprecated environment variable GREP_COLOR is  still  supported,
              but  its setting does not have priority.  WHEN is never, always,
              or auto.

       -L, --files-without-match
              Suppress normal output; instead print the  name  of  each  input
              file from which no output would normally have been printed.  The
              scanning will stop on the first match.

       -l, --files-with-matches
              Suppress normal output; instead print the  name  of  each  input
              file  from  which  output would normally have been printed.  The
              scanning will stop on the first  match.   (-l  is  specified  by
              POSIX.)

       -m NUM, --max-count=NUM
              Stop  reading  a file after NUM matching lines.  If the input is
              standard input from a regular file, and NUM matching  lines  are
              output,  grep  ensures  that the standard input is positioned to
              just after the last matching line before exiting, regardless  of
              the  presence of trailing context lines.  This enables a calling
              process to resume a search.  When grep stops after NUM  matching
              lines,  it  outputs  any trailing context lines.  When the -c or
              --count option is also  used,  grep  does  not  output  a  count
              greater  than NUM.  When the -v or --invert-match option is also
              used, grep stops after outputting NUM non-matching lines.

       -o, --only-matching
              Print only the matched (non-empty) parts  of  a  matching  line,
              with each such part on a separate output line.

       -q, --quiet, --silent
              Quiet;   do   not  write  anything  to  standard  output.   Exit
              immediately with zero status if any match is found, even  if  an
              error  was  detected.   Also see the -s or --no-messages option.
              (-q is specified by POSIX.)

       -s, --no-messages
              Suppress error messages about nonexistent or  unreadable  files.
              Portability note: unlike GNU grep, 7th Edition Unix grep did not
              conform to POSIX, because it lacked -q and its -s option behaved
              like  GNU  grep's  -q option.  USG-style grep also lacked -q but
              its -s option behaved like GNU  grep.   Portable  shell  scripts
              should  avoid  both  -q  and -s and should redirect standard and
              error output to /dev/null instead.  (-s is specified by POSIX.)

   Output Line Prefix Control
       -b, --byte-offset
              Print the 0-based byte offset within the input file before  each
              line of output.  If -o (--only-matching) is specified, print the
              offset of the matching part itself.

       -H, --with-filename
              Print the file name for each match.  This is  the  default  when
              there is more than one file to search.

       -h, --no-filename
              Suppress  the  prefixing  of  file names on output.  This is the
              default when there is only one file (or only standard input)  to
              search.

       --label=LABEL
              Display  input  actually  coming  from  standard  input as input
              coming  from  file  LABEL.   This  is  especially  useful   when
              implementing  tools  like  zgrep,  e.g.,  gzip -cd foo.gz | grep
              --label=foo -H something.  See also the -H option.

       -n, --line-number
              Prefix each line of output with the 1-based line  number  within
              its input file.  (-n is specified by POSIX.)

       -T, --initial-tab
              Make  sure  that the first character of actual line content lies
              on a tab stop, so that the alignment of tabs looks normal.  This
              is  useful  with  options that prefix their output to the actual
              content: -H,-n, and -b.  In order  to  improve  the  probability
              that lines from a single file will all start at the same column,
              this also causes the line number and byte offset (if present) to
              be printed in a minimum size field width.

       -u, --unix-byte-offsets
              Report  Unix-style  byte  offsets.   This  switch causes grep to
              report byte offsets as if the file were a Unix-style text  file,
              i.e.,  with  CR  characters  stripped  off.   This  will produce
              results identical to running  grep  on  a  Unix  machine.   This
              option  has  no  effect unless -b option is also used; it has no
              effect on platforms other than MS-DOS and MS-Windows.

       -Z, --null
              Output a zero byte (the ASCII  NUL  character)  instead  of  the
              character  that normally follows a file name.  For example, grep
              -lZ outputs a zero byte after each  file  name  instead  of  the
              usual  newline.   This option makes the output unambiguous, even
              in the presence of file names containing unusual characters like
              newlines.   This  option  can  be  used  with commands like find
              -print0, perl -0, sort -z, and xargs  -0  to  process  arbitrary
              file names, even those that contain newline characters.

   Context Line Control
       -A NUM, --after-context=NUM
              Print  NUM  lines  of  trailing  context  after  matching lines.
              Places a line containing  a  group  separator  (described  under
              --group-separator)  between  contiguous groups of matches.  With
              the -o or --only-matching option,  this  has  no  effect  and  a
              warning is given.

       -B NUM, --before-context=NUM
              Print  NUM  lines  of  leading  context  before  matching lines.
              Places a line containing  a  group  separator  (described  under
              --group-separator)  between  contiguous groups of matches.  With
              the -o or --only-matching option,  this  has  no  effect  and  a
              warning is given.

       -C NUM, -NUM, --context=NUM
              Print  NUM  lines of output context.  Places a line containing a
              group  separator  (described  under  --group-separator)  between
              contiguous  groups  of  matches.  With the -o or --only-matching
              option, this has no effect and a warning is given.

       --group-separator=SEP
              Use SEP as a group separator. By default SEP  is  double  hyphen
              (--).

       --no-group-separator
              Use empty string as a group separator.

   File and Directory Selection
       -a, --text
              Process  a binary file as if it were text; this is equivalent to
              the --binary-files=text option.

       --binary-files=TYPE
              If the first few bytes of a file indicate that the file contains
              binary  data, assume that the file is of type TYPE.  By default,
              TYPE is binary, and grep  normally  outputs  either  a  one-line
              message  saying  that  a  binary  file matches, or no message if
              there is no match.  If TYPE is without-match, grep assumes  that
              a  binary  file  does  not  match;  this is equivalent to the -I
              option.  If TYPE is text, grep processes a binary file as if  it
              were  text;  this is equivalent to the -a option.  Warning: grep
              --binary-files=text might output binary garbage, which can  have
              nasty  side  effects  if  the  output  is  a terminal and if the
              terminal driver interprets some of it as commands.

       -D ACTION, --devices=ACTION
              If an input file is a device, FIFO  or  socket,  use  ACTION  to
              process  it.   By  default,  ACTION  is  read,  which means that
              devices are read just as if they were ordinary files.  If ACTION
              is skip, devices are silently skipped.

       -d ACTION, --directories=ACTION
              If  an  input file is a directory, use ACTION to process it.  By
              default, ACTION is read, i.e., read directories just as if  they
              were   ordinary   files.   If  ACTION  is  skip,  silently  skip
              directories.  If ACTION is recurse, read all  files  under  each
              directory,  recursively,  following  symbolic links only if they
              are on the command line.  This is equivalent to the -r option.

       --exclude=GLOB
              Skip  files  whose  base  name  matches  GLOB  (using   wildcard
              matching).   A  file-name  glob  can  use  *,  ?,  and [...]  as
              wildcards, and \ to quote  a  wildcard  or  backslash  character
              literally.

       --exclude-from=FILE
              Skip  files  whose  base name matches any of the file-name globs
              read from FILE  (using  wildcard  matching  as  described  under
              --exclude).

       --exclude-dir=DIR
              Exclude  directories  matching  the  pattern  DIR from recursive
              searches.

       -I     Process a binary file as if it did not  contain  matching  data;
              this is equivalent to the --binary-files=without-match option.

       --include=GLOB
              Search  only  files whose base name matches GLOB (using wildcard
              matching as described under --exclude).

       -r, --recursive
              Read all files  under  each  directory,  recursively,  following
              symbolic  links  only  if they are on the command line.  This is
              equivalent to the -d recurse option.

       -R, --dereference-recursive
              Read all files under each directory,  recursively.   Follow  all
              symbolic links, unlike -r.

   Other Options
       --line-buffered
              Use  line  buffering  on  output.   This can cause a performance
              penalty.

       -U, --binary
              Treat the file(s) as binary.  By default, under MS-DOS  and  MS-
              Windows,  grep  guesses the file type by looking at the contents
              of the first 32KB read from the file.  If grep decides the  file
              is  a  text  file, it strips the CR characters from the original
              file contents (to make regular expressions with  ^  and  $  work
              correctly).  Specifying -U overrules this guesswork, causing all
              files to be read and passed to the matching mechanism  verbatim;
              if  the  file is a text file with CR/LF pairs at the end of each
              line, this will cause some regular expressions  to  fail.   This
              option  has  no  effect  on  platforms other than MS-DOS and MS-
              Windows.

       -z, --null-data
              Treat the input as a set of lines, each  terminated  by  a  zero
              byte  (the  ASCII NUL character) instead of a newline.  Like the
              -Z or --null option, this option can be used with commands  like
              sort -z to process arbitrary file names.

REGULAR EXPRESSIONS
       A  regular  expression  is  a  pattern that describes a set of strings.
       Regular  expressions  are   constructed   analogously   to   arithmetic
       expressions, by using various operators to combine smaller expressions.

       grep understands three different versions of regular expression syntax:
       “basic,” “extended” and “perl.” In GNU grep, there is no difference  in
       available  functionality between basic and extended syntaxes.  In other
       implementations, basic regular  expressions  are  less  powerful.   The
       following   description   applies   to  extended  regular  expressions;
       differences for basic regular expressions  are  summarized  afterwards.
       Perl   regular  expressions  give  additional  functionality,  and  are
       documented  in  pcresyntax(3)  and  pcrepattern(3),  but  may  not   be
       available on every system.

       The  fundamental building blocks are the regular expressions that match
       a single character.  Most characters, including all letters and digits,
       are regular expressions that match themselves.  Any meta-character with
       special meaning may be quoted by preceding it with a backslash.

       The period . matches any single character.

   Character Classes and Bracket Expressions
       A bracket expression is a list of characters enclosed by [ and  ].   It
       matches  any  single  character in that list; if the first character of
       the list is the caret ^ then it matches any character not in the  list.
       For  example,  the  regular  expression [0123456789] matches any single
       digit.

       Within a  bracket  expression,  a  range  expression  consists  of  two
       characters separated by a hyphen.  It matches any single character that
       sorts  between  the  two  characters,  inclusive,  using  the  locale's
       collating  sequence  and  character set.  For example, in the default C
       locale, [a-d] is equivalent to [abcd].  Many locales sort characters in
       dictionary   order,  and  in  these  locales  [a-d]  is  typically  not
       equivalent to [abcd]; it might be equivalent to [aBbCcDd], for example.
       To  obtain  the  traditional interpretation of bracket expressions, you
       can use the C locale by setting the LC_ALL environment variable to  the
       value C.

       Finally,  certain  named  classes  of  characters are predefined within
       bracket expressions, as follows.  Their names are self explanatory, and
       they   are   [:alnum:],  [:alpha:],  [:cntrl:],  [:digit:],  [:graph:],
       [:lower:], [:print:], [:punct:], [:space:], [:upper:], and  [:xdigit:].
       For  example,  [[:alnum:]]  means  the  character  class of numbers and
       letters in the current locale. In the C locale and ASCII character  set
       encoding,  this is the same as [0-9A-Za-z].  (Note that the brackets in
       these class names are part of the symbolic names, and must be  included
       in  addition  to the brackets delimiting the bracket expression.)  Most
       meta-characters lose their special meaning inside bracket  expressions.
       To  include  a  literal  ]  place  it first in the list.  Similarly, to
       include a literal ^ place it anywhere but first.  Finally, to include a
       literal - place it last.

   Anchoring
       The caret ^ and the dollar sign $ are meta-characters that respectively
       match the empty string at the beginning and end of a line.

   The Backslash Character and Special Expressions
       The symbols \< and \>  respectively  match  the  empty  string  at  the
       beginning and end of a word.  The symbol \b matches the empty string at
       the edge of a word, and \B matches the empty string provided  it's  not
       at the edge of a word.  The symbol \w is a synonym for [_[:alnum:]] and
       \W is a synonym for [^_[:alnum:]].

   Repetition
       A regular expression may be  followed  by  one  of  several  repetition
       operators:
       ?      The preceding item is optional and matched at most once.
       *      The preceding item will be matched zero or more times.
       +      The preceding item will be matched one or more times.
       {n}    The preceding item is matched exactly n times.
       {n,}   The preceding item is matched n or more times.
       {,m}   The  preceding  item  is matched at most m times.  This is a GNU
              extension.
       {n,m}  The preceding item is matched at least n  times,  but  not  more
              than m times.

   Concatenation
       Two  regular  expressions  may  be  concatenated; the resulting regular
       expression matches any string formed by  concatenating  two  substrings
       that respectively match the concatenated expressions.

   Alternation
       Two  regular  expressions  may  be  joined by the infix operator |; the
       resulting  regular  expression  matches  any  string  matching   either
       alternate expression.

   Precedence
       Repetition  takes  precedence  over  concatenation, which in turn takes
       precedence over alternation.  A whole expression  may  be  enclosed  in
       parentheses   to   override   these   precedence   rules   and  form  a
       subexpression.

   Back References and Subexpressions
       The back-reference \n, where n is a single digit, matches the substring
       previously  matched  by  the  nth  parenthesized  subexpression  of the
       regular expression.

   Basic vs Extended Regular Expressions
       In basic regular expressions the meta-characters ?, +, {, |, (,  and  )
       lose  their  special  meaning; instead use the backslashed versions \?,
       \+, \{, \|, \(, and \).

       Traditional egrep did not support the { meta-character, and some  egrep
       implementations  support \{ instead, so portable scripts should avoid {
       in grep -E patterns and should use [{] to match a literal {.

       GNU grep -E attempts to support traditional usage by assuming that { is
       not   special  if  it  would  be  the  start  of  an  invalid  interval
       specification.  For example, the command grep -E '{1' searches for  the
       two-character  string  {1  instead  of  reporting a syntax error in the
       regular expression.  POSIX allows this behavior as  an  extension,  but
       portable scripts should avoid it.

ENVIRONMENT VARIABLES
       The   behavior  of  grep  is  affected  by  the  following  environment
       variables.

       The locale for category LC_foo is  specified  by  examining  the  three
       environment  variables  LC_ALL, LC_foo, LANG, in that order.  The first
       of these variables that is set specifies the locale.  For  example,  if
       LC_ALL  is not set, but LC_MESSAGES is set to pt_BR, then the Brazilian
       Portuguese locale is used for the LC_MESSAGES category.  The  C  locale
       is  used  if none of these environment variables are set, if the locale
       catalog is not installed, or if grep was  not  compiled  with  national
       language support (NLS).

       GREP_OPTIONS
              This variable specifies default options to be placed in front of
              any  explicit  options.   For  example,   if   GREP_OPTIONS   is
              '--binary-files=without-match  --directories=skip', grep behaves
              as  if  the   two   options   --binary-files=without-match   and
              --directories=skip   had  been  specified  before  any  explicit
              options.  Option specifications are separated by whitespace.   A
              backslash  escapes  the  next  character,  so  it can be used to
              specify an option containing whitespace or a backslash.

       GREP_COLOR
              This variable specifies the  color  used  to  highlight  matched
              (non-empty) text.  It is deprecated in favor of GREP_COLORS, but
              still supported.  The mt, ms, and mc capabilities of GREP_COLORS
              have  priority  over  it.  It can only specify the color used to
              highlight the matching non-empty text in any  matching  line  (a
              selected  line  when the -v command-line option is omitted, or a
              context line when -v is specified).  The default is 01;31, which
              means  a  bold  red  foreground  text  on the terminal's default
              background.

       GREP_COLORS
              Specifies the colors and  other  attributes  used  to  highlight
              various  parts  of  the  output.  Its value is a colon-separated
              list      of      capabilities      that       defaults       to
              ms=01;31:mc=01;31:sl=:cx=:fn=35:ln=32:bn=32:se=36  with  the  rv
              and ne boolean capabilities omitted  (i.e.,  false).   Supported
              capabilities are as follows.

              sl=    SGR  substring  for  whole selected lines (i.e., matching
                     lines when the -v command-line option is omitted, or non-
                     matching  lines  when  -v  is specified).  If however the
                     boolean rv capability and the -v command-line option  are
                     both  specified,  it  applies  to  context matching lines
                     instead.  The default  is  empty  (i.e.,  the  terminal's
                     default color pair).

              cx=    SGR substring for whole context lines (i.e., non-matching
                     lines when the -v  command-line  option  is  omitted,  or
                     matching  lines  when  -v  is specified).  If however the
                     boolean rv capability and the -v command-line option  are
                     both specified, it applies to selected non-matching lines
                     instead.  The default  is  empty  (i.e.,  the  terminal's
                     default color pair).

              rv     Boolean  value  that reverses (swaps) the meanings of the
                     sl= and cx= capabilities when the -v command-line  option
                     is specified.  The default is false (i.e., the capability
                     is omitted).

              mt=01;31
                     SGR substring for matching non-empty text in any matching
                     line  (i.e.,  a  selected  line  when the -v command-line
                     option  is  omitted,  or  a  context  line  when  -v   is
                     specified).   Setting  this is equivalent to setting both
                     ms= and mc= at once to the same value.  The default is  a
                     bold   red   text   foreground   over  the  current  line
                     background.

              ms=01;31
                     SGR substring for matching non-empty text in  a  selected
                     line.  (This is only used when the -v command-line option
                     is omitted.)  The effect  of  the  sl=  (or  cx=  if  rv)
                     capability  remains  active  when  this  kicks  in.   The
                     default is a bold red text foreground  over  the  current
                     line background.

              mc=01;31
                     SGR  substring  for  matching non-empty text in a context
                     line.  (This is only used when the -v command-line option
                     is  specified.)   The  effect  of  the cx= (or sl= if rv)
                     capability  remains  active  when  this  kicks  in.   The
                     default  is  a  bold red text foreground over the current
                     line background.

              fn=35  SGR substring for file names prefixing any content  line.
                     The  default  is  a  magenta  text  foreground  over  the
                     terminal's default background.

              ln=32  SGR substring for  line  numbers  prefixing  any  content
                     line.   The  default  is a green text foreground over the
                     terminal's default background.

              bn=32  SGR substring for  byte  offsets  prefixing  any  content
                     line.   The  default  is a green text foreground over the
                     terminal's default background.

              se=36  SGR substring for separators that  are  inserted  between
                     selected  line  fields  (:), between context line fields,
                     (-), and between groups of adjacent  lines  when  nonzero
                     context  is  specified  (--).  The default is a cyan text
                     foreground over the terminal's default background.

              ne     Boolean value that prevents clearing to the end  of  line
                     using  Erase  in  Line  (EL) to Right (\33[K) each time a
                     colorized item ends.  This  is  needed  on  terminals  on
                     which  EL  is  not  supported.  It is otherwise useful on
                     terminals for which the  back_color_erase  (bce)  boolean
                     terminfo  capability  does  not  apply,  when  the chosen
                     highlight colors do not affect the background, or when EL
                     is  too  slow or causes too much flicker.  The default is
                     false (i.e., the capability is omitted).

              Note that boolean capabilities have no  =...   part.   They  are
              omitted (i.e., false) by default and become true when specified.

              See   the   Select   Graphic  Rendition  (SGR)  section  in  the
              documentation of the text terminal that is  used  for  permitted
              values   and  their  meaning  as  character  attributes.   These
              substring values are integers in decimal representation and  can
              be  concatenated with semicolons.  grep takes care of assembling
              the result into a  complete  SGR  sequence  (\33[...m).   Common
              values to concatenate include 1 for bold, 4 for underline, 5 for
              blink, 7 for inverse, 39 for default foreground color, 30 to  37
              for  foreground  colors,  90  to 97 for 16-color mode foreground
              colors, 38;5;0 to 38;5;255  for  88-color  and  256-color  modes
              foreground colors, 49 for default background color, 40 to 47 for
              background colors, 100  to  107  for  16-color  mode  background
              colors,  and 48;5;0 to 48;5;255 for 88-color and 256-color modes
              background colors.

       LC_ALL, LC_COLLATE, LANG
              These variables specify the locale for the LC_COLLATE  category,
              which  determines the collating sequence used to interpret range
              expressions like [a-z].

       LC_ALL, LC_CTYPE, LANG
              These variables specify the locale for  the  LC_CTYPE  category,
              which  determines the type of characters, e.g., which characters
              are whitespace.

       LC_ALL, LC_MESSAGES, LANG
              These variables specify the locale for the LC_MESSAGES category,
              which  determines the language that grep uses for messages.  The
              default C locale uses American English messages.

       POSIXLY_CORRECT
              If set, grep behaves as POSIX requires; otherwise, grep  behaves
              more  like other GNU programs.  POSIX requires that options that
              follow file names must be treated as  file  names;  by  default,
              such  options  are permuted to the front of the operand list and
              are treated as options.  Also, POSIX requires that  unrecognized
              options be diagnosed as “illegal”, but since they are not really
              against the law the default is to diagnose  them  as  “invalid”.
              POSIXLY_CORRECT   also   disables  _N_GNU_nonoption_argv_flags_,
              described below.

       _N_GNU_nonoption_argv_flags_
              (Here N is grep's numeric process ID.)  If the ith character  of
              this  environment variable's value is 1, do not consider the ith
              operand of grep to be an option, even if it appears to  be  one.
              A  shell  can  put  this  variable  in  the environment for each
              command it runs, specifying which operands are  the  results  of
              file name wildcard expansion and therefore should not be treated
              as options.  This behavior is available  only  with  the  GNU  C
              library, and only when POSIXLY_CORRECT is not set.

EXIT STATUS
       Normally,  the  exit  status  is  0  if  selected lines are found and 1
       otherwise.  But the exit status is 2 if an error occurred,  unless  the
       -q  or --quiet or --silent option is used and a selected line is found.
       Note, however, that POSIX only mandates, for  programs  such  as  grep,
       cmp, and diff, that the exit status in case of error be greater than 1;
       it is therefore advisable, for the sake of portability,  to  use  logic
       that  tests  for  this  general  condition  instead  of strict equality
       with 2.

COPYRIGHT
       Copyright 1998-2000, 2002, 2005-2014 Free Software Foundation, Inc.

       This is free software; see the source for copying conditions.  There is
       NO  warranty;  not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR
       PURPOSE.

BUGS
   Reporting Bugs
       Email bug reports to <bug-grep@gnu.org>, a mailing list whose web  page
       is  <http://lists.gnu.org/mailman/listinfo/bug-grep>.   grep's Savannah
       bug tracker is located at <http://savannah.gnu.org/bugs/?group=grep>.

   Known Bugs
       Large repetition counts in the {n,m} construct may cause  grep  to  use
       lots of memory.  In addition, certain other obscure regular expressions
       require exponential time and space, and may cause grep to  run  out  of
       memory.

       Back-references are very slow, and may require exponential time.

SEE ALSO
   Regular Manual Pages
       awk(1),  cmp(1),  diff(1),  find(1), gzip(1), perl(1), sed(1), sort(1),
       xargs(1), zgrep(1), read(2),  pcre(3),  pcresyntax(3),  pcrepattern(3),
       terminfo(5), glob(7), regex(7).

   POSIX Programmer's Manual Page
       grep(1p).

   TeXinfo Documentation
       The  full  documentation  for  grep  is maintained as a TeXinfo manual,
       which you can read at http://www.gnu.org/software/grep/manual/.  If the
       info and grep programs are properly installed at your site, the command

              info grep

       should give you access to the complete manual.

NOTES
       This  man  page  is maintained only fitfully; the full documentation is
       often more up-to-date.

       GNU's not Unix, but Unix is a beast; its plural form is Unixen.



User Commands                    GNU grep 2.20                         GREP(1)
SED(1)                           User Commands                          SED(1)



NAME
       sed - stream editor for filtering and transforming text

SYNOPSIS
       sed [OPTION]... {script-only-if-no-other-script} [input-file]...

DESCRIPTION
       Sed  is a stream editor.  A stream editor is used to perform basic text
       transformations on an input stream (a file or input from  a  pipeline).
       While  in  some  ways similar to an editor which permits scripted edits
       (such as ed), sed works by making only one pass over the input(s),  and
       is consequently more efficient.  But it is sed's ability to filter text
       in a pipeline which particularly distinguishes it from other  types  of
       editors.

       -n, --quiet, --silent

              suppress automatic printing of pattern space

       -e script, --expression=script

              add the script to the commands to be executed

       -f script-file, --file=script-file

              add the contents of script-file to the commands to be executed

       --follow-symlinks

              follow symlinks when processing in place

       -i[SUFFIX], --in-place[=SUFFIX]

              edit files in place (makes backup if SUFFIX supplied)

       -c, --copy

              use copy instead of rename when shuffling files in -i mode

       -b, --binary

              does  nothing;  for  compatibility with WIN32/CYGWIN/MSDOS/EMX (
              open files in binary mode (CR+LFs are not treated specially))

       -l N, --line-length=N

              specify the desired line-wrap length for the `l' command

       --posix

              disable all GNU extensions.

       -r, --regexp-extended

              use extended regular expressions in the script.

       -s, --separate

              consider files as separate rather than as  a  single  continuous
              long stream.

       -u, --unbuffered

              load  minimal amounts of data from the input files and flush the
              output buffers more often

       -z, --null-data

              separate lines by NUL characters

       --help

              display this help and exit

       --version

              output version information and exit

       If no -e, --expression, -f, or --file option is given, then  the  first
       non-option  argument  is  taken  as  the  sed script to interpret.  All
       remaining arguments are names of input files; if  no  input  files  are
       specified, then the standard input is read.

       GNU  sed  home  page: <http://www.gnu.org/software/sed/>.  General help
       using GNU software: <http://www.gnu.org/gethelp/>.  E-mail bug  reports
       to:  <bug-sed@gnu.org>.   Be sure to include the word ``sed'' somewhere
       in the ``Subject:'' field.

COMMAND SYNOPSIS
       This is just a brief synopsis of sed commands to serve as a reminder to
       those  who  already  know sed; other documentation (such as the texinfo
       document) must be consulted for fuller descriptions.

   Zero-address ``commands''
       : label
              Label for b and t commands.

       #comment
              The comment extends until the next newline (or the end of  a  -e
              script fragment).

       }      The closing bracket of a { } block.

   Zero- or One- address commands
       =      Print the current line number.

       a \

       text   Append text, which has each embedded newline preceded by a back‐
              slash.

       i \

       text   Insert text, which has each embedded newline preceded by a back‐
              slash.

       q [exit-code]
              Immediately  quit  the  sed  script  without processing any more
              input, except that if auto-print is  not  disabled  the  current
              pattern  space will be printed.  The exit code argument is a GNU
              extension.

       Q [exit-code]
              Immediately quit the sed  script  without  processing  any  more
              input.  This is a GNU extension.

       r filename
              Append text read from filename.

       R filename
              Append  a  line read from filename.  Each invocation of the com‐
              mand reads a line from the file.  This is a GNU extension.

   Commands which accept address ranges
       {      Begin a block of commands (end with a }).

       b label
              Branch to label; if label is omitted, branch to end of script.

       c \

       text   Replace the selected lines with text, which  has  each  embedded
              newline preceded by a backslash.

       d      Delete pattern space.  Start next cycle.

       D      If  pattern  space contains no newline, start a normal new cycle
              as if the d command was issued.  Otherwise, delete text  in  the
              pattern  space  up  to the first newline, and restart cycle with
              the resultant pattern space,  without  reading  a  new  line  of
              input.

       h H    Copy/append pattern space to hold space.

       g G    Copy/append hold space to pattern space.

       l      List out the current line in a ``visually unambiguous'' form.

       l width
              List  out  the  current line in a ``visually unambiguous'' form,
              breaking it at width characters.  This is a GNU extension.

       n N    Read/append the next line of input into the pattern space.

       p      Print the current pattern space.

       P      Print up to the first embedded newline of  the  current  pattern
              space.

       s/regexp/replacement/
              Attempt  to match regexp against the pattern space.  If success‐
              ful,  replace  that  portion  matched  with  replacement.    The
              replacement may contain the special character & to refer to that
              portion of the pattern space  which  matched,  and  the  special
              escapes  \1  through  \9  to refer to the corresponding matching
              sub-expressions in the regexp.

       t label
              If a s/// has done a  successful  substitution  since  the  last
              input  line  was  read  and  since the last t or T command, then
              branch to label; if label is omitted, branch to end of script.

       T label
              If no s/// has done a successful  substitution  since  the  last
              input  line  was  read  and  since the last t or T command, then
              branch to label; if label is omitted, branch to end  of  script.
              This is a GNU extension.

       w filename
              Write the current pattern space to filename.

       W filename
              Write  the  first line of the current pattern space to filename.
              This is a GNU extension.

       x      Exchange the contents of the hold and pattern spaces.

       y/source/dest/
              Transliterate the characters in the pattern space  which  appear
              in source to the corresponding character in dest.

Addresses
       Sed  commands can be given with no addresses, in which case the command
       will be executed for all input lines; with one address, in  which  case
       the  command  will  only  be  executed for input lines which match that
       address; or with two addresses, in which case the command will be  exe‐
       cuted  for  all  input  lines  which match the inclusive range of lines
       starting from the first address and continuing to the  second  address.
       Three  things  to  note about address ranges: the syntax is addr1,addr2
       (i.e., the addresses are separated by a comma); the  line  which  addr1
       matched will always be accepted, even if addr2 selects an earlier line;
       and if addr2 is a regexp, it will not be tested against the  line  that
       addr1 matched.

       After  the address (or address-range), and before the command, a !  may
       be inserted, which specifies that the command shall only be executed if
       the address (or address-range) does not match.

       The following address types are supported:

       number Match  only  the specified line number (which increments cumula‐
              tively across files, unless the -s option is  specified  on  the
              command line).

       first~step
              Match every step'th line starting with line first.  For example,
              ``sed -n 1~2p'' will print all the  odd-numbered  lines  in  the
              input  stream,  and the address 2~5 will match every fifth line,
              starting with the second.  first can be zero; in this case,  sed
              operates as if it were equal to step.  (This is an extension.)

       $      Match the last line.

       /regexp/
              Match lines matching the regular expression regexp.

       \cregexpc
              Match  lines  matching the regular expression regexp.  The c may
              be any character.

       GNU sed also supports some special 2-address forms:

       0,addr2
              Start out in "matched  first  address"  state,  until  addr2  is
              found.  This is similar to 1,addr2, except that if addr2 matches
              the very first line of input the 0,addr2 form will be at the end
              of  its  range,  whereas  the  1,addr2 form will still be at the
              beginning of its range.  This works only when addr2 is a regular
              expression.

       addr1,+N
              Will match addr1 and the N lines following addr1.

       addr1,~N
              Will  match  addr1  and the lines following addr1 until the next
              line whose input line number is a multiple of N.

REGULAR EXPRESSIONS
       POSIX.2 BREs should be supported, but they aren't completely because of
       performance  problems.  The \n sequence in a regular expression matches
       the newline character, and similarly for \a, \t, and other sequences.

BUGS
       E-mail bug reports to bug-sed@gnu.org.  Also, please include the output
       of ``sed --version'' in the body of your report if at all possible.

AUTHOR
       Written by Jay Fenlason, Tom Lord, Ken Pizzini, and Paolo Bonzini.  GNU
       sed home page: <http://www.gnu.org/software/sed/>.  General help  using
       GNU  software:  <http://www.gnu.org/gethelp/>.   E-mail bug reports to:
       <bug-sed@gnu.org>.  Be sure to include the word  ``sed''  somewhere  in
       the ``Subject:'' field.

COPYRIGHT
       Copyright  ©  2012  Free Software Foundation, Inc.  License GPLv3+: GNU
       GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
       This is free software: you are free  to  change  and  redistribute  it.
       There is NO WARRANTY, to the extent permitted by law.

SEE ALSO
       awk(1),  ed(1),  grep(1),  tr(1),  perlre(1),  sed.info, any of various
       books on sed, the sed FAQ (http://sed.sf.net/grabbag/tutorials/sed‐
       faq.txt), http://sed.sf.net/grabbag/.

       The full documentation for sed is maintained as a Texinfo manual.  If
       the info and sed programs are properly installed at your site, the com‐
       mand

              info sed

       should give you access to the complete manual.



sed 4.2.2                       September 2020                          SED(1)
TAR(1)                           User Commands                          TAR(1)



NAME
       tar - manual page for tar 1.26

SYNOPSIS
       tar [OPTION...] [FILE]...

DESCRIPTION
       GNU `tar' saves many files together into a single tape or disk archive,
       and can restore individual files from the archive.

       Note that this manual page contains just  very  brief  description  (or
       more like a list of possible functionality) originally generated by the
       help2man utility.  The full documentation for tar is  maintained  as  a
       Texinfo manual.  If the info and tar programs are properly installed at
       your site, the command `info tar' should give you access  to  the  com‐
       plete manual.

EXAMPLES
       tar -cf archive.tar foo bar
              # Create archive.tar from files foo and bar.

       tar -tvf archive.tar
              # List all files in archive.tar verbosely.

       tar -xf archive.tar
              # Extract all files from archive.tar.

DEFAULTS
       *This* tar installation defaults to:

       --format=gnu  -f-  -b20  --quoting-style=escape --rmt-command=/sbin/rmt
       --rsh-command=/usr/bin/rsh

Main operation mode:
       -A, --catenate, --concatenate
              append tar files to an archive

       -c, --create
              create a new archive

       -d, --diff, --compare
              find differences between archive and file system

       --delete
              delete from the archive (not on mag tapes!)

       -r, --append
              append files to the end of an archive

       -t, --list
              list the contents of an archive

       --test-label
              test the archive volume label and exit

       -u, --update
              only append files newer than copy in archive

       -x, --extract, --get
              extract files from an archive

Common options:
       -C, --directory=DIR
              change to directory DIR

       -f, --file=ARCHIVE
              use archive file or device ARCHIVE

       -j, --bzip2
              filter the archive through bzip2

        -J, --xz
              filter the archive through xz

       -p, --preserve-permissions
              extract  information  about  file permissions (default for supe‐
              ruser)

       -v, --verbose
              verbosely list files processed

       -z, --gzip
              filter the archive through gzip


Operation modifiers:
       --check-device
              check   device   numbers   when  creating  incremental  archives
              (default)

       -g, --listed-incremental=FILE
              handle new GNU-format incremental backup

       -G, --incremental
              handle old GNU-format incremental backup

       --ignore-failed-read
              do not exit with nonzero on unreadable files

       --level=NUMBER
              dump level for created listed-incremental archive

       -n, --seek
              archive is seekable

       --no-check-device
              do not check device numbers when creating incremental archives

       --no-seek
              archive is not seekable

       --occurrence[=NUMBER]
              process only the NUMBERth occurrence of each  file  in  the  ar‐
              chive;  this option is valid only in conjunction with one of the
              subcommands --delete, --diff, --extract or  --list  and  when  a
              list  of files is given either on the command line or via the -T
              option; NUMBER defaults to 1

       --sparse-version=MAJOR[.MINOR]
              set version of the sparse format to use (implies --sparse)

       -S, --sparse
              handle sparse files efficiently

Overwrite control:
       -k, --keep-old-files
              don't replace existing files  when  extracting,  treat  them  as
              errors

       --keep-newer-files
              don't  replace  existing files that are newer than their archive
              copies

       --keep-directory-symlink
              Don't replace existing symlinks to directories when extracting.

       --no-overwrite-dir
              preserve metadata of existing directories

       --overwrite
              overwrite existing files when extracting

       --overwrite-dir
              overwrite  metadata  of  existing  directories  when  extracting
              (default)

       --recursive-unlink
              empty hierarchies prior to extracting directory

       --remove-files
              remove files after adding them to the archive

       --skip-old-files
              don't replace existing files when extracting, silently skip over
              them

       -U, --unlink-first
              remove each file prior to extracting over it

       -W, --verify
              attempt to verify the archive after writing it

Select output stream:
       --ignore-command-error ignore exit codes of children

       --no-ignore-command-error
              treat non-zero exit codes of children as error

       -O, --to-stdout
              extract files to standard output

       --to-command=COMMAND
              pipe extracted files to another program

Handling of file attributes:
       --atime-preserve[=METHOD]
              preserve access times on dumped files, either by  restoring  the
              times  after  reading (METHOD='replace'; default) or by not set‐
              ting the times in the first place (METHOD='system')

       --delay-directory-restore
              delay setting modification times and  permissions  of  extracted
              directories until the end of extraction

       --group=NAME
              force NAME as group for added files

       --mode=CHANGES
              force (symbolic) mode CHANGES for added files

       --mtime=DATE-OR-FILE
              set mtime for added files from DATE-OR-FILE

       -m, --touch
              don't extract file modified time

       --no-delay-directory-restore
              cancel the effect of --delay-directory-restore option

       --no-same-owner
              extract files as yourself (default for ordinary users)

       --no-same-permissions
              apply  the user's umask when extracting permissions from the ar‐
              chive (default for ordinary users)

       --numeric-owner
              always use numbers for user/group names

       --owner=NAME
              force NAME as owner for added files

       -p, --preserve-permissions, --same-permissions
              extract information about file permissions  (default  for  supe‐
              ruser)

       --preserve
              same as both -p and -s

       --same-owner
              try  extracting  files  with the same ownership as exists in the
              archive (default for superuser)

       -s, --preserve-order, --same-order
              sort names to extract to match archive

Handling of extended file attributes:
       --acls Enable the POSIX ACLs support

       --no-acls
              Disable the POSIX ACLs support

       --no-selinux
              Disable the SELinux context support

       --no-xattrs
              Disable extended attributes support

       --selinux
              Enable the SELinux context support

       --xattrs
              Enable extended attributes support

       --xattrs-exclude=MASK
              specify the exclude pattern for xattr keys

       --xattrs-include=MASK
              specify the include pattern for xattr keys

Device selection and switching:
       -f, --file=ARCHIVE
              use archive file or device ARCHIVE

       --force-local
              archive file is local even if it has a colon

       -F, --info-script=NAME, --new-volume-script=NAME
              run script at end of each tape (implies -M)

       -L, --tape-length=NUMBER
              change tape after writing NUMBER x 1024 bytes

       -M, --multi-volume
              create/list/extract multi-volume archive

       --rmt-command=COMMAND
              use given rmt COMMAND instead of rmt

       --rsh-command=COMMAND
              use remote COMMAND instead of rsh

       --volno-file=FILE
              use/update the volume number in FILE

Device blocking:
       -b, --blocking-factor=BLOCKS
              BLOCKS x 512 bytes per record

       -B, --read-full-records
              reblock as we read (for 4.2BSD pipes)

       -i, --ignore-zeros
              ignore zeroed blocks in archive (means EOF)

       --record-size=NUMBER
              NUMBER of bytes per record, multiple of 512

Archive format selection:
       -H, --format=FORMAT
              create archive of the given format

              FORMAT is one of the following:

                     gnu    GNU tar 1.13.x format

                     oldgnu GNU format as per tar <= 1.12

                     pax    POSIX 1003.1-2001 (pax) format

                     posix  same as pax

                     ustar  POSIX 1003.1-1988 (ustar) format

                     v7     old V7 tar format

       --old-archive, --portability
              same as --format=v7

       --pax-option=keyword[[:]=value][,keyword[[:]=value]]...
              control pax keywords

       --posix
              same as --format=posix

       -V, --label=TEXT
              create archive with volume name TEXT; at list/extract time,  use
              TEXT as a globbing pattern for volume name

Compression options:
       -a, --auto-compress
              use archive suffix to determine the compression program

       -I, --use-compress-program=PROG
              filter through PROG (must accept -d)

       -j, --bzip2
              filter the archive through bzip2

       -J, --xz
              filter the archive through xz

       --lzip filter the archive through lzip

       --lzma filter the archive through lzma

       --lzop

       --no-auto-compress
              do not use archive suffix to determine the compression program

       -z, --gzip, --gunzip, --ungzip
              filter the archive through gzip

       -Z, --compress, --uncompress
              filter the archive through compress

       Note:   You   might   need  to  install  external  program  (lzip/ncom‐
       press/lzma...) to use some of these compression options

Local file selection:
       --add-file=FILE
              add given FILE to the archive (useful if its name starts with  a
              dash)

       --backup[=CONTROL]
              backup before removal, choose version CONTROL

       -C, --directory=DIR
              change to directory DIR

       --exclude=PATTERN
              exclude files, given as a PATTERN

       --exclude-backups
              exclude backup and lock files

       --exclude-caches
              exclude  contents of directories containing CACHEDIR.TAG, except
              for the tag file itself

       --exclude-caches-all
              exclude directories containing CACHEDIR.TAG

       --exclude-caches-under exclude everything under directories containing
              CACHEDIR.TAG

       --exclude-tag=FILE
              exclude contents of directories containing FILE, except for FILE
              itself

       --exclude-tag-all=FILE exclude directories containing FILE

       --exclude-tag-under=FILE
              exclude everything under directories containing FILE

       --exclude-vcs
              exclude version control system directories

       -h, --dereference
              follow symlinks; archive and dump the files they point to

       --hard-dereference
              follow hard links; archive and dump the files they refer to

       -K, --starting-file=MEMBER-NAME
              begin at member MEMBER-NAME in the archive

       --newer-mtime=DATE
              compare date and time when data changed only

       --no-null
              disable the effect of the previous --null option

       --no-recursion
              avoid descending automatically in directories

       --no-unquote
              do not unquote filenames read with -T

       --null                 -T reads null-terminated names, disable -C

       -N, --newer=DATE-OR-FILE, --after-date=DATE-OR-FILE
              only store files newer than DATE-OR-FILE

       --one-file-system
              stay in local file system when creating archive

       -P, --absolute-names
              don't strip leading `/'s from file names

       --recursion
              recurse into directories (default)

       --suffix=STRING
              backup  before  removal, override usual suffix ('~' unless over‐
              ridden by environment variable SIMPLE_BACKUP_SUFFIX)

       -T, --files-from=FILE
              get names to extract or create from FILE

       --unquote
              unquote filenames read with -T (default)

       -X, --exclude-from=FILE
              exclude patterns listed in FILE

File name transformations:
       --strip-components=NUMBER
              strip NUMBER leading components from file names on extraction

       --transform=EXPRESSION, --xform=EXPRESSION
              use sed replace EXPRESSION to transform file names

              File name matching options (affect both exclude and include pat‐
              terns):

       --anchored
              patterns match file name start

       --ignore-case
              ignore case

       --no-anchored
              patterns match after any `/' (default for exclusion)

       --no-ignore-case
              case sensitive matching (default)

       --no-wildcards
              verbatim string matching

       --no-wildcards-match-slash
              wildcards do not match `/'

       --wildcards
              use wildcards (default)

       --wildcards-match-slash
              wildcards match `/' (default for exclusion)

Informative output:
       --checkpoint[=NUMBER]
              display progress messages every NUMBERth record (default 10)

       --checkpoint-action=ACTION
              execute ACTION on each checkpoint

       --full-time
              print file time to its full resolution

       --index-file=FILE
              send verbose output to FILE

       -l, --check-links
              print a message if not all links are dumped

       --no-quote-chars=STRING
              disable quoting for characters from STRING

       --quote-chars=STRING
              additionally quote characters from STRING

       --quoting-style=STYLE
              set name quoting style; see below for valid STYLE values

       -R, --block-number
              show block number within archive with each message

       --show-defaults
              show tar defaults

       --show-omitted-dirs
              when  listing  or  extracting, list each directory that does not
              match search criteria

       --show-transformed-names, --show-stored-names
              show file or archive names after transformation

       --totals[=SIGNAL]
              print total bytes after processing the archive; with an argument
              -  print total bytes when this SIGNAL is delivered; Allowed sig‐
              nals are: SIGHUP, SIGQUIT,  SIGINT,  SIGUSR1  and  SIGUSR2;  the
              names without SIG prefix are also accepted

       --utc  print file modification dates in UTC

       -v, --verbose
              verbosely list files processed

       --warning=KEYWORD
              warning control

       -w, --interactive, --confirmation
              ask for confirmation for every action

Compatibility options:
       -o     when  creating,  same as --old-archive; when extracting, same as
              --no-same-owner

Other options:
       -?, --help
              give this help list

       --restrict
              disable use of some potentially harmful options

       --usage
              give a short usage message

       --version
              print program version

       Mandatory or optional arguments to long options are also  mandatory  or
       optional for any corresponding short options.

       The   backup   suffix   is  `~',  unless  set  with  --suffix  or  SIM‐
       PLE_BACKUP_SUFFIX.  The version control may be  set  with  --backup  or
       VERSION_CONTROL, values are:

       none, off
              never make backups

       t, numbered
              make numbered backups

       nil, existing
              numbered if numbered backups exist, simple otherwise

       never, simple
              always make simple backups

       Valid arguments for the --quoting-style option are:

              literal shell shell-always c c-maybe escape locale clocale

AUTHOR
       Written by John Gilmore and Jay Fenlason.

REPORTING BUGS
       Report bugs to <bug-tar@gnu.org>.

COPYRIGHT
       Copyright  ©  2013  Free Software Foundation, Inc.  License GPLv3+: GNU
       GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
       This is free software: you are free  to  change  and  redistribute  it.
       There is NO WARRANTY, to the extent permitted by law.



tar 1.26                         February 2013                          TAR(1)
SUDO(8)                   BSD System Manager's Manual                  SUDO(8)

NAME
     sudo, sudoedit — execute a command as another user

SYNOPSIS
     sudo -h | -K | -k | -V
     sudo -v [-AknS] [-a type] [-g group] [-h host] [-p prompt] [-u user]
     sudo -l [-AknS] [-a type] [-g group] [-h host] [-p prompt] [-U user]
          [-u user] [command]
     sudo [-AbEHnPS] [-a type] [-C num] [-c class] [-g group] [-h host]
          [-p prompt] [-r role] [-t type] [-T timeout] [-u user] [VAR=value]
          [-i | -s] [command]
     sudoedit [-AknS] [-a type] [-C num] [-c class] [-g group] [-h host]
          [-p prompt] [-T timeout] [-u user] file ...

DESCRIPTION
     sudo allows a permitted user to execute a command as the superuser or
     another user, as specified by the security policy.  The invoking user's
     real (not effective) user ID is used to determine the user name with
     which to query the security policy.

     sudo supports a plugin architecture for security policies and input/out‐
     put logging.  Third parties can develop and distribute their own policy
     and I/O logging plugins to work seamlessly with the sudo front end.  The
     default security policy is sudoers, which is configured via the file
     /etc/sudoers, or via LDAP.  See the Plugins section for more information.

     The security policy determines what privileges, if any, a user has to run
     sudo.  The policy may require that users authenticate themselves with a
     password or another authentication mechanism.  If authentication is
     required, sudo will exit if the user's password is not entered within a
     configurable time limit.  This limit is policy-specific; the default
     password prompt timeout for the sudoers security policy is 5 minutes.

     Security policies may support credential caching to allow the user to run
     sudo again for a period of time without requiring authentication.  The
     sudoers policy caches credentials for 5 minutes, unless overridden in
     sudoers(5).  By running sudo with the -v option, a user can update the
     cached credentials without running a command.

     When invoked as sudoedit, the -e option (described below), is implied.

     Security policies may log successful and failed attempts to use sudo.  If
     an I/O plugin is configured, the running command's input and output may
     be logged as well.

     The options are as follows:

     -A, --askpass
                 Normally, if sudo requires a password, it will read it from
                 the user's terminal.  If the -A (askpass) option is speci‐
                 fied, a (possibly graphical) helper program is executed to
                 read the user's password and output the password to the stan‐
                 dard output.  If the SUDO_ASKPASS environment variable is
                 set, it specifies the path to the helper program.  Otherwise,
                 if sudo.conf(5) contains a line specifying the askpass pro‐
                 gram, that value will be used.  For example:

                     # Path to askpass helper program
                     Path askpass /usr/X11R6/bin/ssh-askpass

                 If no askpass program is available, sudo will exit with an
                 error.

     -b, --background
                 Run the given command in the background.  Note that it is not
                 possible to use shell job control to manipulate background
                 processes started by sudo.  Most interactive commands will
                 fail to work properly in background mode.

     -C num, --close-from=num
                 Close all file descriptors greater than or equal to num
                 before executing a command.  Values less than three are not
                 permitted.  By default, sudo will close all open file
                 descriptors other than standard input, standard output and
                 standard error when executing a command.  The security policy
                 may restrict the user's ability to use this option.  The
                 sudoers policy only permits use of the -C option when the
                 administrator has enabled the closefrom_override option.

     -E, --preserve-env
                 Indicates to the security policy that the user wishes to pre‐
                 serve their existing environment variables.  The security
                 policy may return an error if the user does not have permis‐
                 sion to preserve the environment.

     --preserve-env=list
                 Indicates to the security policy that the user wishes to add
                 the comma-separated list of environment variables to those
                 preserved from the user's environment.  The security policy
                 may return an error if the user does not have permission to
                 preserve the environment.

     -e, --edit  Edit one or more files instead of running a command.  In lieu
                 of a path name, the string "sudoedit" is used when consulting
                 the security policy.  If the user is authorized by the pol‐
                 icy, the following steps are taken:

                 1.   Temporary copies are made of the files to be edited with
                      the owner set to the invoking user.

                 2.   The editor specified by the policy is run to edit the
                      temporary files.  The sudoers policy uses the
                      SUDO_EDITOR, VISUAL and EDITOR environment variables (in
                      that order).  If none of SUDO_EDITOR, VISUAL or EDITOR
                      are set, the first program listed in the editor
                      sudoers(5) option is used.

                 3.   If they have been modified, the temporary files are
                      copied back to their original location and the temporary
                      versions are removed.

                 To help prevent the editing of unauthorized files, the fol‐
                 lowing restrictions are enforced unless explicitly allowed by
                 the security policy:

                 ·  Symbolic links may not be edited (version 1.8.15 and
                    higher).

                 ·  Symbolic links along the path to be edited are not fol‐
                    lowed when the parent directory is writable by the invok‐
                    ing user unless that user is root (version 1.8.16 and
                    higher).

                 ·  Files located in a directory that is writable by the
                    invoking user may not be edited unless that user is root
                    (version 1.8.16 and higher).

                 Users are never allowed to edit device special files.

                 If the specified file does not exist, it will be created.
                 Note that unlike most commands run by sudo, the editor is run
                 with the invoking user's environment unmodified.  If, for
                 some reason, sudo is unable to update a file with its edited
                 version, the user will receive a warning and the edited copy
                 will remain in a temporary file.

     -g group, --group=group
                 Run the command with the primary group set to group instead
                 of the primary group specified by the target user's password
                 database entry.  The group may be either a group name or a
                 numeric group ID (GID) prefixed with the ‘#’ character (e.g.
                 #0 for GID 0).  When running a command as a GID, many shells
                 require that the ‘#’ be escaped with a backslash (‘\’).  If
                 no -u option is specified, the command will be run as the
                 invoking user.  In either case, the primary group will be set
                 to group.

     -H, --set-home
                 Request that the security policy set the HOME environment
                 variable to the home directory specified by the target user's
                 password database entry.  Depending on the policy, this may
                 be the default behavior.

     -h, --help  Display a short help message to the standard output and exit.

     -h host, --host=host
                 Run the command on the specified host if the security policy
                 plugin supports remote commands.  Note that the sudoers plug‐
                 in does not currently support running remote commands.  This
                 may also be used in conjunction with the -l option to list a
                 user's privileges for the remote host.

     -i, --login
                 Run the shell specified by the target user's password data‐
                 base entry as a login shell.  This means that login-specific
                 resource files such as .profile, .bash_profile or .login will
                 be read by the shell.  If a command is specified, it is
                 passed to the shell for execution via the shell's -c option.
                 If no command is specified, an interactive shell is executed.
                 sudo attempts to change to that user's home directory before
                 running the shell.  The command is run with an environment
                 similar to the one a user would receive at log in.  Note that
                 most shells behave differently when a command is specified as
                 compared to an interactive session; consult the shell's man‐
                 ual for details.  The Command environment section in the
                 sudoers(5) manual documents how the -i option affects the
                 environment in which a command is run when the sudoers policy
                 is in use.

     -K, --remove-timestamp
                 Similar to the -k option, except that it removes the user's
                 cached credentials entirely and may not be used in conjunc‐
                 tion with a command or other option.  This option does not
                 require a password.  Not all security policies support cre‐
                 dential caching.

     -k, --reset-timestamp
                 When used without a command, invalidates the user's cached
                 credentials.  In other words, the next time sudo is run a
                 password will be required.  This option does not require a
                 password and was added to allow a user to revoke sudo permis‐
                 sions from a .logout file.

                 When used in conjunction with a command or an option that may
                 require a password, this option will cause sudo to ignore the
                 user's cached credentials.  As a result, sudo will prompt for
                 a password (if one is required by the security policy) and
                 will not update the user's cached credentials.

                 Not all security policies support credential caching.

     -l, --list  If no command is specified, list the allowed (and forbidden)
                 commands for the invoking user (or the user specified by the
                 -U option) on the current host.  A longer list format is used
                 if this option is specified multiple times and the security
                 policy supports a verbose output format.

                 If a command is specified and is permitted by the security
                 policy, the fully-qualified path to the command is displayed
                 along with any command line arguments.  If a command is spec‐
                 ified but not allowed by the policy, sudo will exit with a
                 status value of 1.

     -n, --non-interactive
                 Avoid prompting the user for input of any kind.  If a pass‐
                 word is required for the command to run, sudo will display an
                 error message and exit.

     -P, --preserve-groups
                 Preserve the invoking user's group vector unaltered.  By
                 default, the sudoers policy will initialize the group vector
                 to the list of groups the target user is a member of.  The
                 real and effective group IDs, however, are still set to match
                 the target user.

     -p prompt, --prompt=prompt
                 Use a custom password prompt with optional escape sequences.
                 The following percent (‘%’) escape sequences are supported by
                 the sudoers policy:

                 %H  expanded to the host name including the domain name (on
                     if the machine's host name is fully qualified or the fqdn
                     option is set in sudoers(5))

                 %h  expanded to the local host name without the domain name

                 %p  expanded to the name of the user whose password is being
                     requested (respects the rootpw, targetpw, and runaspw
                     flags in sudoers(5))

                 %U  expanded to the login name of the user the command will
                     be run as (defaults to root unless the -u option is also
                     specified)

                 %u  expanded to the invoking user's login name

                 %%  two consecutive ‘%’ characters are collapsed into a sin‐
                     gle ‘%’ character

                 The custom prompt will override the default prompt specified
                 by either the security policy or the SUDO_PROMPT environment
                 variable.  On systems that use PAM, the custom prompt will
                 also override the prompt specified by a PAM module unless the
                 passprompt_override flag is disabled in sudoers.

     -r role, --role=role
                 Run the command with an SELinux security context that
                 includes the specified role.

     -S, --stdin
                 Write the prompt to the standard error and read the password
                 from the standard input instead of using the terminal device.
                 The password must be followed by a newline character.

     -s, --shell
                 Run the shell specified by the SHELL environment variable if
                 it is set or the shell specified by the invoking user's pass‐
                 word database entry.  If a command is specified, it is passed
                 to the shell for execution via the shell's -c option.  If no
                 command is specified, an interactive shell is executed.  Note
                 that most shells behave differently when a command is speci‐
                 fied as compared to an interactive session; consult the
                 shell's manual for details.

     -t type, --type=type
                 Run the command with an SELinux security context that
                 includes the specified type.  If no type is specified, the
                 default type is derived from the role.

     -U user, --other-user=user
                 Used in conjunction with the -l option to list the privileges
                 for user instead of for the invoking user.  The security pol‐
                 icy may restrict listing other users' privileges.  The
                 sudoers policy only allows root or a user with the ALL privi‐
                 lege on the current host to use this option.

     -T timeout, --command-timeout=timeout
                 Used to set a timeout for the command.  If the timeout
                 expires before the command has exited, the command will be
                 terminated.  The security policy may restrict the ability to
                 set command timeouts.  The sudoers policy requires that user-
                 specified timeouts be explicitly enabled.

     -u user, --user=user
                 Run the command as a user other than the default target user
                 (usually root).  The user may be either a user name or a
                 numeric user ID (UID) prefixed with the ‘#’ character (e.g.
                 #0 for UID 0).  When running commands as a UID, many shells
                 require that the ‘#’ be escaped with a backslash (‘\’).  Some
                 security policies may restrict UIDs to those listed in the
                 password database.  The sudoers policy allows UIDs that are
                 not in the password database as long as the targetpw option
                 is not set.  Other security policies may not support this.

     -V, --version
                 Print the sudo version string as well as the version string
                 of the security policy plugin and any I/O plugins.  If the
                 invoking user is already root the -V option will display the
                 arguments passed to configure when sudo was built and plugins
                 may display more verbose information such as default options.

     -v, --validate
                 Update the user's cached credentials, authenticating the user
                 if necessary.  For the sudoers plugin, this extends the sudo
                 timeout for another 5 minutes by default, but does not run a
                 command.  Not all security policies support cached creden‐
                 tials.

     --          The -- option indicates that sudo should stop processing com‐
                 mand line arguments.

     Environment variables to be set for the command may also be passed on the
     command line in the form of VAR=value, e.g.
     LD_LIBRARY_PATH=/usr/local/pkg/lib.  Variables passed on the command line
     are subject to restrictions imposed by the security policy plugin.  The
     sudoers policy subjects variables passed on the command line to the same
     restrictions as normal environment variables with one important excep‐
     tion.  If the setenv option is set in sudoers, the command to be run has
     the SETENV tag set or the command matched is ALL, the user may set vari‐
     ables that would otherwise be forbidden.  See sudoers(5) for more infor‐
     mation.

COMMAND EXECUTION
     When sudo executes a command, the security policy specifies the execution
     environment for the command.  Typically, the real and effective user and
     group and IDs are set to match those of the target user, as specified in
     the password database, and the group vector is initialized based on the
     group database (unless the -P option was specified).

     The following parameters may be specified by security policy:

     ·  real and effective user ID

     ·  real and effective group ID

     ·  supplementary group IDs

     ·  the environment list

     ·  current working directory

     ·  file creation mode mask (umask)

     ·  SELinux role and type

     ·  scheduling priority (aka nice value)

   Process model
     There are two distinct ways sudo can run a command.

     If an I/O logging plugin is configured or if the security policy explic‐
     itly requests it, a new pseudo-terminal (“pty”) is allocated and fork(2)
     is used to create a second sudo process, referred to as the monitor.  The
     monitor creates a new terminal session with itself as the leader and the
     pty as its controlling terminal, calls fork(2), sets up the execution
     environment as described above, and then uses the execve(2) system call
     to run the command in the child process.  The monitor exists to relay job
     control signals between the user's existing terminal and the pty the com‐
     mand is being run in.  This makes it possible to suspend and resume the
     command.  Without the monitor, the command would be in what POSIX terms
     an “orphaned process group” and it would not receive any job control sig‐
     nals from the kernel.  When the command exits or is terminated by a sig‐
     nal, the monitor passes the command's exit status to the main sudo
     process and exits.  After receiving the command's exit status, the main
     sudo passes the command's exit status to the security policy's close
     function and exits.

     If no pty is used, sudo calls fork(2), sets up the execution environment
     as described above, and uses the execve(2) system call to run the command
     in the child process.  The main sudo process waits until the command has
     completed, then passes the command's exit status to the security policy's
     close function and exits.  As a special case, if the policy plugin does
     not define a close function, sudo will execute the command directly
     instead of calling fork(2) first.  The sudoers policy plugin will only
     define a close function when I/O logging is enabled, a pty is required,
     or the pam_session or pam_setcred options are enabled.  Note that
     pam_session and pam_setcred are enabled by default on systems using PAM.

   Signal handling
     When the command is run as a child of the sudo process, sudo will relay
     signals it receives to the command.  The SIGINT and SIGQUIT signals are
     only relayed when the command is being run in a new pty or when the sig‐
     nal was sent by a user process, not the kernel.  This prevents the com‐
     mand from receiving SIGINT twice each time the user enters control-C.
     Some signals, such as SIGSTOP and SIGKILL, cannot be caught and thus will
     not be relayed to the command.  As a general rule, SIGTSTP should be used
     instead of SIGSTOP when you wish to suspend a command being run by sudo.

     As a special case, sudo will not relay signals that were sent by the com‐
     mand it is running.  This prevents the command from accidentally killing
     itself.  On some systems, the reboot(8) command sends SIGTERM to all non-
     system processes other than itself before rebooting the system.  This
     prevents sudo from relaying the SIGTERM signal it received back to
     reboot(8), which might then exit before the system was actually rebooted,
     leaving it in a half-dead state similar to single user mode.  Note, how‐
     ever, that this check only applies to the command run by sudo and not any
     other processes that the command may create.  As a result, running a
     script that calls reboot(8) or shutdown(8) via sudo may cause the system
     to end up in this undefined state unless the reboot(8) or shutdown(8) are
     run using the exec() family of functions instead of system() (which
     interposes a shell between the command and the calling process).

     If no I/O logging plugins are loaded and the policy plugin has not
     defined a close() function, set a command timeout or required that the
     command be run in a new pty, sudo may execute the command directly
     instead of running it as a child process.

   Plugins
     Plugins may be specified via Plugin directives in the sudo.conf(5) file.
     They may be loaded as dynamic shared objects (on systems that support
     them), or compiled directly into the sudo binary.  If no sudo.conf(5)
     file is present, or it contains no Plugin lines, sudo will use the tradi‐
     tional sudoers security policy and I/O logging.  See the sudo.conf(5)
     manual for details of the /etc/sudo.conf file and the sudo_plugin(5) man‐
     ual for more information about the sudo plugin architecture.

EXIT VALUE
     Upon successful execution of a command, the exit status from sudo will be
     the exit status of the program that was executed.  If the command termi‐
     nated due to receipt of a signal, sudo will send itself the same signal
     that terminated the command.

     If the -l option was specified without a command, sudo will exit with a
     value of 0 if the user is allowed to run sudo and they authenticated suc‐
     cessfully (as required by the security policy).  If a command is speci‐
     fied with the -l option, the exit value will only be 0 if the command is
     permitted by the security policy, otherwise it will be 1.

     If there is an authentication failure, a configuration/permission problem
     or if the given command cannot be executed, sudo exits with a value of 1.
     In the latter case, the error string is printed to the standard error.
     If sudo cannot stat(2) one or more entries in the user's PATH, an error
     is printed to the standard error.  (If the directory does not exist or if
     it is not really a directory, the entry is ignored and no error is
     printed.)  This should not happen under normal circumstances.  The most
     common reason for stat(2) to return “permission denied” is if you are
     running an automounter and one of the directories in your PATH is on a
     machine that is currently unreachable.

SECURITY NOTES
     sudo tries to be safe when executing external commands.

     To prevent command spoofing, sudo checks "." and "" (both denoting cur‐
     rent directory) last when searching for a command in the user's PATH (if
     one or both are in the PATH).  Note, however, that the actual PATH envi‐
     ronment variable is not modified and is passed unchanged to the program
     that sudo executes.

     Users should never be granted sudo privileges to execute files that are
     writable by the user or that reside in a directory that is writable by
     the user.  If the user can modify or replace the command there is no way
     to limit what additional commands they can run.

     Please note that sudo will normally only log the command it explicitly
     runs.  If a user runs a command such as sudo su or sudo sh, subsequent
     commands run from that shell are not subject to sudo's security policy.
     The same is true for commands that offer shell escapes (including most
     editors).  If I/O logging is enabled, subsequent commands will have their
     input and/or output logged, but there will not be traditional logs for
     those commands.  Because of this, care must be taken when giving users
     access to commands via sudo to verify that the command does not inadver‐
     tently give the user an effective root shell.  For more information,
     please see the Preventing shell escapes section in sudoers(5).

     To prevent the disclosure of potentially sensitive information, sudo dis‐
     ables core dumps by default while it is executing (they are re-enabled
     for the command that is run).  This historical practice dates from a time
     when most operating systems allowed setuid processes to dump core by
     default.  To aid in debugging sudo crashes, you may wish to re-enable
     core dumps by setting “disable_coredump” to false in the sudo.conf(5)
     file as follows:

           Set disable_coredump false

     See the sudo.conf(5) manual for more information.

ENVIRONMENT
     sudo utilizes the following environment variables.  The security policy
     has control over the actual content of the command's environment.

     EDITOR           Default editor to use in -e (sudoedit) mode if neither
                      SUDO_EDITOR nor VISUAL is set.

     MAIL             Set to the mail spool of the target user when the -i
                      option is specified or when env_reset is enabled in
                      sudoers (unless MAIL is present in the env_keep list).

     HOME             Set to the home directory of the target user when the -i
                      or -H options are specified, when the -s option is spec‐
                      ified and set_home is set in sudoers, when
                      always_set_home is enabled in sudoers, or when env_reset
                      is enabled in sudoers and HOME is not present in the
                      env_keep list.

     LOGNAME          Set to the login name of the target user when the -i
                      option is specified, when the set_logname option is
                      enabled in sudoers or when the env_reset option is
                      enabled in sudoers (unless LOGNAME is present in the
                      env_keep list).

     PATH             May be overridden by the security policy.

     SHELL            Used to determine shell to run with -s option.

     SUDO_ASKPASS     Specifies the path to a helper program used to read the
                      password if no terminal is available or if the -A option
                      is specified.

     SUDO_COMMAND     Set to the command run by sudo.

     SUDO_EDITOR      Default editor to use in -e (sudoedit) mode.

     SUDO_GID         Set to the group ID of the user who invoked sudo.

     SUDO_PROMPT      Used as the default password prompt unless the -p option
                      was specified.

     SUDO_PS1         If set, PS1 will be set to its value for the program
                      being run.

     SUDO_UID         Set to the user ID of the user who invoked sudo.

     SUDO_USER        Set to the login name of the user who invoked sudo.

     USER             Set to the same value as LOGNAME, described above.

     USERNAME         Same as USER.

     VISUAL           Default editor to use in -e (sudoedit) mode if
                      SUDO_EDITOR is not set.

FILES
     /etc/sudo.conf            sudo front end configuration

EXAMPLES
     Note: the following examples assume a properly configured security pol‐
     icy.

     To get a file listing of an unreadable directory:

           $ sudo ls /usr/local/protected

     To list the home directory of user yaz on a machine where the file system
     holding ~yaz is not exported as root:

           $ sudo -u yaz ls ~yaz

     To edit the index.html file as user www:

           $ sudoedit -u www ~www/htdocs/index.html

     To view system logs only accessible to root and users in the adm group:

           $ sudo -g adm more /var/log/syslog

     To run an editor as jim with a different primary group:

           $ sudoedit -u jim -g audio ~jim/sound.txt

     To shut down a machine:

           $ sudo shutdown -r +15 "quick reboot"

     To make a usage listing of the directories in the /home partition.  Note
     that this runs the commands in a sub-shell to make the cd and file redi‐
     rection work.

           $ sudo sh -c "cd /home ; du -s * | sort -rn > USAGE"

SEE ALSO
     su(1), stat(2), passwd(5), sudo.conf(5), sudoers(5), sudo_plugin(5),
     sudoreplay(8), visudo(8)

HISTORY
     See the HISTORY file in the sudo distribution (https://www.sudo.ws/his‐
     tory.html) for a brief history of sudo.

AUTHORS
     Many people have worked on sudo over the years; this version consists of
     code written primarily by:

           Todd C. Miller

     See the CONTRIBUTORS file in the sudo distribution
     (https://www.sudo.ws/contributors.html) for an exhaustive list of people
     who have contributed to sudo.

CAVEATS
     There is no easy way to prevent a user from gaining a root shell if that
     user is allowed to run arbitrary commands via sudo.  Also, many programs
     (such as editors) allow the user to run commands via shell escapes, thus
     avoiding sudo's checks.  However, on most systems it is possible to pre‐
     vent shell escapes with the sudoers(5) plugin's noexec functionality.

     It is not meaningful to run the cd command directly via sudo, e.g.,

           $ sudo cd /usr/local/protected

     since when the command exits the parent process (your shell) will still
     be the same.  Please see the EXAMPLES section for more information.

     Running shell scripts via sudo can expose the same kernel bugs that make
     setuid shell scripts unsafe on some operating systems (if your OS has a
     /dev/fd/ directory, setuid shell scripts are generally safe).

BUGS
     If you feel you have found a bug in sudo, please submit a bug report at
     https://bugzilla.sudo.ws/

SUPPORT
     Limited free support is available via the sudo-users mailing list, see
     https://www.sudo.ws/mailman/listinfo/sudo-users to subscribe or search
     the archives.

DISCLAIMER
     sudo is provided “AS IS” and any express or implied warranties, includ‐
     ing, but not limited to, the implied warranties of merchantability and
     fitness for a particular purpose are disclaimed.  See the LICENSE file
     distributed with sudo or https://www.sudo.ws/license.html for complete
     details.

Sudo 1.8.23                     March 21, 2018                     Sudo 1.8.23
